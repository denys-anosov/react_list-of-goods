{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","id","uuidv4","name","App","state","visibleGoods","showGoods","setState","reverseGoods","reverse","sortGoodsByName","sort","g1","g2","localeCompare","sortGoodsByLength","length","resetGoods","this","hasVisibleGoods","className","onClick","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2PASMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,GAAIC,cACJC,KAAMH,MASKI,EAAb,4MACEC,MAAe,CACbC,aAAc,IAFlB,EAKEC,UAAY,WACV,EAAKC,SAAS,CACZF,aAAcR,KAPpB,EAWEW,aAAe,WACb,EAAKD,UAAS,SAACH,GAAD,MAAY,CACxBC,aAAc,YAAID,EAAMC,cAAcI,eAb5C,EAiBEC,gBAAkB,WAChB,EAAKH,UAAS,SAACH,GAAD,MAAY,CACxBC,aAAc,YAAID,EAAMC,cAAcM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGV,KAAKY,cAAcD,EAAGX,cAnBtF,EAuBEa,kBAAoB,WAClB,EAAKR,UAAS,SAACH,GAAD,MAAY,CACxBC,aAAc,YAAID,EAAMC,cAAcM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGV,KAAKc,OAASH,EAAGX,KAAKc,eAzBtF,EA6BEC,WAAa,WACX,EAAKV,UAAS,iBAAO,CACnBF,aAAcR,OA/BpB,4CAmCE,WACE,IAAQQ,EAAiBa,KAAKd,MAAtBC,aACFc,EAAkBd,EAAaW,OAAS,EAE9C,OACE,sBAAKI,UAAU,MAAf,UACE,uCACCD,GACC,gCACE,6BACGd,EAAaP,KAAI,SAAAC,GAAI,OACpB,6BACGA,EAAKG,MADCH,EAAKC,SAKlB,wBACEqB,QAASH,KAAKV,aACdc,KAAK,SAFP,qBAMA,wBACED,QAASH,KAAKR,gBACdY,KAAK,SAFP,iCAMA,wBACED,QAASH,KAAKH,kBACdO,KAAK,SAFP,4BAMA,wBACED,QAASH,KAAKD,WACdK,KAAK,SAFP,uBAQFH,GACA,wBACEE,QAASH,KAAKZ,UACdgB,KAAK,SAFP,0BA9EV,GAAyBC,IAAMC,WC5B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ccf2fc0c.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\n\ninterface Good {\n  id: string,\n  name: string,\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  id: uuidv4(),\n  name: good,\n}));\n\ntype Props = {};\n\ninterface State {\n  visibleGoods: Good[],\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    visibleGoods: [],\n  };\n\n  showGoods = () => {\n    this.setState({\n      visibleGoods: goodsFromServer,\n    });\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({\n      visibleGoods: [...state.visibleGoods].reverse(),\n    }));\n  };\n\n  sortGoodsByName = () => {\n    this.setState((state) => ({\n      visibleGoods: [...state.visibleGoods].sort((g1, g2) => g1.name.localeCompare(g2.name)),\n    }));\n  };\n\n  sortGoodsByLength = () => {\n    this.setState((state) => ({\n      visibleGoods: [...state.visibleGoods].sort((g1, g2) => g1.name.length - g2.name.length),\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState(() => ({\n      visibleGoods: goodsFromServer,\n    }));\n  };\n\n  render() {\n    const { visibleGoods } = this.state;\n    const hasVisibleGoods = visibleGoods.length > 0;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {hasVisibleGoods && (\n          <div>\n            <ul>\n              {visibleGoods.map(good => (\n                <li key={good.id}>\n                  {good.name}\n                </li>\n              ))}\n            </ul>\n            <button\n              onClick={this.reverseGoods}\n              type=\"button\"\n            >\n              Reverse\n            </button>\n            <button\n              onClick={this.sortGoodsByName}\n              type=\"button\"\n            >\n              Sort alphabetically\n            </button>\n            <button\n              onClick={this.sortGoodsByLength}\n              type=\"button\"\n            >\n              Sort by length\n            </button>\n            <button\n              onClick={this.resetGoods}\n              type=\"button\"\n            >\n              Reset\n            </button>\n          </div>\n        )}\n        {!hasVisibleGoods && (\n          <button\n            onClick={this.showGoods}\n            type=\"button\"\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}